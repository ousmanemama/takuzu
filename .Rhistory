x=2
r=seq(9,13,length=3)
m=matrix(1:9,ncol=3)
m1=<-matrix(1:9,ncol=3)
m2<-matrix(1:9,ncol=3)
m3<-matrix(1:9, ncol=3)
m4<- matrix(1:9, ncol=3)
p=matrix(1:9, ncol=3)
View(m3)
View(m)
m=matrix(1;9,ncol=3)
m=matrix(1:9,ncol=3)
View(m)
m1 <- matix(1:12,ncol=4)
m1 <- matrix(1:12,ncol=4)
View(m1)
m2<-matrix(1:4,ncol=2)
View(m2)
m3<-matrix(1:6,rbind(2),cbind(3))
View(m3)
View(m2)
dim(m2)
d=dim(m3)
solve(m2)
eigen(m2)
m5<-matrix(1:4,nrow=false,nrow=2)
m5<-matrix(1:4,byrow=false,nrow=2)
m5<-matrix(1:4,nrow=2,byrow=2)
m6<-matrix(1:4,nrow=2,byrow=false)
m6<-matrix(1:4,nrow=2,byrow=false)
m6<-matrix(1:4,nrow=2,byrow=FALSE)
View(m6)
m7<-matrix(1:9,nrow=3)
View(m7)
View(m2)
View(m2)
m9<-matrix(1:4,byrow=FALSE,nrow=2)
View(m9)
p<-matrix(data=(3,4,1,2,9,8,6,6,10),nrow=3,byrow=TRUE)
p<-matrix(data=c(3,4,1,2,9,8,6,6,10),nrow=3,byrow=TRUE)
View(m9)
p1<-matrix(data=c(3,4,1,2,9,8,6,6,10),nrow=3,byrow=TRUE)
View(p1)
View(m7)
View(m)
View(m)
View(m1)
View(m7)
View(m7)
View(m2)
View(m1)
View(m2)
View(m)
View(m1)
View(m2)
View(m3)
View(m5)
View(m5)
View(m6)
View(m7)
View(m9)
View(p)
p2<-matrix(data=c(3,4,1,2,9,8,6,6,10),nrow=3,byrow=3)
View(p2)
View(p2)
p3<-matrix(data=c(3,4,1,2,9,8,6,6,10),ncol=3,byrow=TRUE)
View(p3)
a=c(1,2,3,4,5)
b=c(6,7,8,9,5)
b=c(6,7,8,9,10)
c=c(11,12,13,14,15.)
M1<-matrix(data=c(a,b,b,c),rbind(3),cbind(5),byrow=TRUE)
M1<-matrix(data=c(a,b,c),rbind(3),cbind(5),byrow=TRUE)
View(M1)
M2<-matraix(data=c(a,b,c),rbind(3),cbind(5),byrow=FALSE)
M2<-matrix(data=c(a,b,c),rbind(3),cbind(5),byrow=FALSE)
View(M2)
M3<-matrix(data=c(a,b,c),rbind(5),cbind(3),byrow=FALSE)
View(M3)
s=M1+M3
s=sum(M1,M3)
ss=sum(M1)
M4<-matrix(1:20,rbind(4),cbind(5))
View(M4)
2==3,2==2
2==3
2==2
2>3
3>=3
M9<-matrix(data=c(a,b,b,c),rbind(3),cbind(5),byrow=T)
M9<-matrix(data=c(a,b,c),rbind(3),cbind(5),byrow=T)
View(M9)
M9<-matrix(data=c(a,b,c),rbind(5),cbind(3),byrow=T)
v1=c(-0.2,1.2,length=200)
v2=seq(-0.5,1.5,length=100)
v3=seq(-0.2,1.2,length=200)
v=runif(100)
myc<-cumsum(v)/(1:100)
plot(myc)
plot(myc,main="moyenne cumulé",ylab="la moyenne",ylim=c(0,1),lwd=5,col="red",type="p")
abline(h=0.5,lwd=3,col="blue")
abline(v=45,lwd=3,col="black")
abline(h=20v+30,lwd=9,col="green")
abline(h=20v,lwd=9,col="green")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
---
title: "TPaRendre"
---
title: "TPRendre"
---
title: "TP"
---
title: "tp"
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
##1)
T_risqué=function(u,d,p,N){
S=c()
S[1]=1
k=2
while(k<=N){
T=sample(c(1+u,1+d),size=1,prob=c(p,1-p))
S[k]=S[k-1]*T
}
S
}
##2)
T_nonrisqué=function(r,N){
S=c()
S[1]=1
k=2
while(k<=N){
S[k]=(1+r)**k
k=k+1
}
S
}
A=T_risqué(0.1,-0.02,0.52,N=100)
B=T_risqué(0.1,-0.02,0.52,N=100)
knitr::opts_chunk$set(echo = TRUE)
A=T_risqué(0.1,-0.02,0.52,N=100)
##1)
T_risqué=function(u,d,p,N){
S=c()
S[1]=1
k=2
while(k<=N){
T=sample(c(1+u,1+d),size=1,prob=c(p,1-p))
S[k]=S[k-1]*T
}
S
}
##2)
T_nonrisqué=function(r,N){
S=c()
S[1]=1
k=2
while(k<=N){
S[k]=(1+r)**k
k=k+1
}
S
}
A=T_risqué(0.1,-0.02,0.52,N=100)
B=T_risqué(0.1,-0.02,0.52,N=100)
knitr::opts_chunk$set(echo = TRUE)
##1)
T_risqué=function(u,d,p,N){
S=c()
S[1]=1
k=2
while(k<=N){
T=sample(c(1+u,1+d),size=1,prob=c(p,1-p))
S[k]=S[k-1]*T
}
S
}
##2)
T_nonrisqué=function(r,N){
S=c()
S[1]=1
k=2
while(k<=N){
S[k]=(1+r)**k
k=k+1
}
S
}
A=T_risqué(0.1,-0.02,0.52,N=100)
B=T_risqué(0.1,-0.02,0.52,N=100)
knitr::opts_chunk$set(echo = TRUE)
##1)
T_risqué=function(u,d,p,N){
S=c()
S[1]=1
k=2
while(k<=N){
T=sample(c(1+u,1+d),size=1,prob=c(p,1-p))
S[k]=S[k-1]*T
}
S
}
##2)
T_nonrisqué=function(r,N){
S=c()
S[1]=1
k=2
while(k<=N){
S[k]=(1+r)**k
k=k+1
}
S
}
A=T_risqué(0.1,-0.02,0.55,N=100)
B=T_risqué(0.1,-0.03,0.52,N=100)
knitr::opts_chunk$set(echo = TRUE)
###Exercice2
investn1=function=(x,d,u,p,r,N{
###Exercice2
investn1=function(x,d,u,p,r,N{
###Exercice2
investn1=function(x,d,u,p,r,N){
v=c()
v[1]=x
k=2
T=sample(c(1+u,1+d),size=1,prob=c(p,1-p))
v[k]=v[k-1]*((1-1/4)*(1+r)+(1/4)*T)
k=k+1
}
v
###Exercice2
investn1=function(x,d,u,p,r,N){
v=c()
v[1]=x
k=2
while(k<=N){
T=sample(c(1+u,1+d),size=1,prob=c(p,1-p))
v[k]=v[k-1]*((1-1/4)*(1+r)+(1/4)*T)
k=k+1
}
v
}
A=investn1(1,0.1,-0.02,0.52,0.04,100)
B=investn1(1,0.1,-0.02,0.52,0.04,100)
C=investn1(1,0.1,-0.02,0.52,0.04,100)
plot(C,col="red",type="l",main="stratégie",xlab="x",ylim=c(0,70),xlim=c(0,100),ylab="y")
lines(A,col="green",type="l")
lines(B,col="blue",type="l")
##3)
A=T_risqué(0.1,-0.02,0.55,N=100)
knitr::opts_chunk$set(echo = TRUE)
A=T_risqué(0.1,-0.02,0.52,N=100)
knitr::opts_chunk$set(echo = TRUE)
A=investn1(1,0.1,-0.02,0.52,0.04,100)
B=investn1(1,0.1,-0.02,0.52,0.04,100)
C=investn1(1,0.1,-0.02,0.52,0.04,100)
plot(C,col="red",type="l",main="stratégie",xlab="x",ylim=c(0,70),xlim=c(0,100),ylab="y")
lines(A,col="green",type="l")
lines(B,col="blue",type="l")
A=T_risqué(0.1,-0.02,0.52,N=100)
knitr::opts_chunk$set(echo = TRUE)
A=T_risqué(0.1,-0.02,0.52,N=100)
install.packages("rmarkdown")
R
packageVersion("rmarkdown")
library(FactoMineR)
library(factoextra)
library(Factoshiny)
install.packages("shiny")
install.packages("shiny")
library(FactoMineR)
library(factoextra)
library(Factoshiny)
install.packages("Factoshiny")
install.packages("Factoshiny")
library(FactoMineR)
library(factoextra)
library(Factoshiny)
library(FactoMineR)
library(factoextra)
library(Factoshiny)
library(FactoMineR)
library(factoextra)
library(Factoshiny)
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
library(FactoMineR)
library(factoextra)
library(Factoshiny)
q()
q()
install.packages("installr")
library(installr)
check.for.updates.R()
updateR()
install.packages("installr")
library(installr)
check.for.updates.R()
updateR()
version
version
version
version
update.packages(ask = FALSE)
library(FactoMineR)
library(factoextra)
library(Factoshiny)
install.packages("shiny")
library(FactoMineR)
library(factoextra)
library(Factoshiny)
install.packages("Factoshiny")
install.packages("Factoshiny")
library(FactoMineR)
library(factoextra)
library(Factoshiny)
install.packages("shiny")
version
q()
version
version
setwd("C:/ProjetTakuzu/Takuzu")
devtools::install_local(".", force = TRUE)
remove.packages("Takuzu")
devtools::install_local(".", force = TRUE)
devtools::install_local(".", force = TRUE)
library(Takuzu)
run_app()
devtools::load_all()
Takuzu::run_app()
Takuzu::run_app()
